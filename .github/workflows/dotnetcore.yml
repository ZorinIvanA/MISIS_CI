name: MISIS CI DEPLOY ACTION
on: 
  push:
    branches:
    - master
env:
  GKE_PROJECT: ${{ secrets.GKE_PROJECT }}
  GKE_EMAIL: ${{ secrets.GKE_EMAIL }}
  GITHUB_SHA: ${{ github.sha }}
  GKE_ZONE: us-central1-a
  GKE_CLUSTER:  misis-test 

jobs:
  build:
    runs-on: ubuntu-latest    
    env:
        VERSION: ${{ '1.0.0' }} 
    steps:    
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 2.2.108
    
    - name: Checkout
      uses: actions/checkout@master

    - name: ls
      run: |     
        echo $PWD
        ls -l
        
    - name: build API container     
      working-directory: MISIS_CI/MISIS.CI.API
      run: |             
        ls -l        
        docker build -t docker.pkg.github.com/zorinivana/misis_ci/api-container:$VERSION .
        docker login docker.pkg.github.com -u ${{ secrets.username }} -p ${{secrets.GITHUB_TOKEN}}
        docker push docker.pkg.github.com/zorinivana/misis_ci/api-container:$VERSION
        gcloud auth configure-docker 
    - name: build Gateway container      
      working-directory: MISIS_CI/MISIS.CI.Gateway
      run: |             
        ls -l        
        docker build -t docker.pkg.github.com/zorinivana/misis_ci/gateway-container:$VERSION .
        docker login docker.pkg.github.com -u ${{ secrets.username }} -p ${{secrets.GITHUB_TOKEN}}
        docker push docker.pkg.github.com/zorinivana/misis_ci/gateway-container:$VERSION
    - name: build Storage container      
      working-directory: MISIS_CI/MISIS.CI.Storage
      run: |             
        ls -l        
        docker build -t docker.pkg.github.com/zorinivana/misis_ci/storage-container:$VERSION .
        docker login docker.pkg.github.com -u ${{ secrets.username }} -p ${{secrets.GITHUB_TOKEN}}
        docker push docker.pkg.github.com/zorinivana/misis_ci/storage-container:$VERSION
    - name: Setup GKE
      uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
      with:
        version: '270.0.0'
        service_account_email: ${{ secrets.GKE_EMAIL }}
        service_account_key: ${{ secrets.GKE_KEY }}
    # Set up kustomize
    - name: Set up Kustomize
      run: |
        curl -o kustomize --location https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize

    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |
        gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $GKE_PROJECT_ID
        touch ./kustomization.yaml
        ls -l
        ./kustomize edit add resource service.yaml
        ./kustomize edit add resource deployment.yaml
        cat kustomization.yaml
        kubectl apply -f ./deployment.yaml
        kubectl rollout status deployment/weather-api
        kubectl get services -o wide